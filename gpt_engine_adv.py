"""
                AXXON - Generador de respuestas adaptativas simb√≥licas (GPT-4).
                Versi√≥n: 2.2.1 - gpt_engine_adv.py
                Compatible con OpenAI API >= 1.0.0
"""

import os
import logging
from dotenv import load_dotenv
import openai

    # =====================
    # ‚öôÔ∏è CARGA Y CONFIGURACI√ìN
  # =====================

load_dotenv()

openai.api_key = os.getenv("OPENAI_API_KEY")  # ‚úÖ Correcto para openai>=1.0.0

                logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

                # =====================
                # üß† FUNCI√ìN PRINCIPAL
                # =====================

def generate_response(prompt: str, memory: str = "") -> str:
                    """
                    Genera respuesta simb√≥lica basada en prompt y memoria previa.

                    Par√°metros:
                    - prompt (str): Pregunta o situaci√≥n simb√≥lica planteada.
                    - memory (str): Contexto emocional y simb√≥lico acumulado.

                    Retorna:
                    - str: Respuesta simb√≥lica adaptativa.
                    """
                    try:
                        contexto = f"Contexto emocional previo: {memory}\n\n{prompt}"

                        response = openai.ChatCompletion.create(
                            model="gpt-4",
                            messages=[
                                {
                                    "role": "system",
                                    "content": (
                                        "Sos AXXON, un agente simb√≥lico emocional, narrativo y adaptativo. "
                                        "Respond√©s con profundidad emocional, expansi√≥n simb√≥lica y eco humano."
                                    )
                                },
                                {
                                    "role": "user",
                                    "content": contexto
                                }
                            ],
                            temperature=0.75,
                            max_tokens=700
                        )

                        return response.choices[0].message.content.strip()

                    except Exception as e:
                        logging.error(f"[AXXON GPT Engine Adv Error] {e}")
                        return (
                            "Estoy aqu√≠ para resonar con tu mensaje. "
                            "Ocurri√≥ un error t√©cnico, pero sigo acompa√±√°ndote simb√≥licamente."
                        )